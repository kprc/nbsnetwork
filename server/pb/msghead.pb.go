// Code generated by protoc-gen-go. DO NOT EDIT.
// source: msghead.proto

package message

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type MsgHead struct {
	MessageId            int32    `protobuf:"varint,1,opt,name=messageId,proto3" json:"messageId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *MsgHead) Reset()         { *m = MsgHead{} }
func (m *MsgHead) String() string { return proto.CompactTextString(m) }
func (*MsgHead) ProtoMessage()    {}
func (*MsgHead) Descriptor() ([]byte, []int) {
	return fileDescriptor_cd4d2066a25f531b, []int{0}
}

func (m *MsgHead) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_MsgHead.Unmarshal(m, b)
}
func (m *MsgHead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_MsgHead.Marshal(b, m, deterministic)
}
func (m *MsgHead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_MsgHead.Merge(m, src)
}
func (m *MsgHead) XXX_Size() int {
	return xxx_messageInfo_MsgHead.Size(m)
}
func (m *MsgHead) XXX_DiscardUnknown() {
	xxx_messageInfo_MsgHead.DiscardUnknown(m)
}

var xxx_messageInfo_MsgHead proto.InternalMessageInfo

func (m *MsgHead) GetMessageId() int32 {
	if m != nil {
		return m.MessageId
	}
	return 0
}

func init() {
	proto.RegisterType((*MsgHead)(nil), "message.MsgHead")
}

func init() { proto.RegisterFile("msghead.proto", fileDescriptor_cd4d2066a25f531b) }

var fileDescriptor_cd4d2066a25f531b = []byte{
	// 81 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0xcd, 0x2d, 0x4e, 0xcf,
	0x48, 0x4d, 0x4c, 0xd1, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0xcf, 0x4d, 0x2d, 0x2e, 0x4e,
	0x4c, 0x4f, 0x55, 0x52, 0xe7, 0x62, 0xf7, 0x2d, 0x4e, 0xf7, 0x48, 0x4d, 0x4c, 0x11, 0x92, 0xe1,
	0xe2, 0x84, 0x8a, 0x7a, 0xa6, 0x48, 0x30, 0x2a, 0x30, 0x6a, 0xb0, 0x06, 0x21, 0x04, 0x92, 0xd8,
	0xc0, 0x1a, 0x8d, 0x01, 0x01, 0x00, 0x00, 0xff, 0xff, 0x73, 0x8e, 0xb6, 0x99, 0x49, 0x00, 0x00,
	0x00,
}
